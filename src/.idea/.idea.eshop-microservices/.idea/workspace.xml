<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile profileName="http">Services/Catalog/Catalog.API/Catalog.API.csproj</projectFile>
    <projectFile profileName="https">Services/Catalog/Catalog.API/Catalog.API.csproj</projectFile>
    <projectFile profileName="WorkerService1">WorkerService1/WorkerService1.csproj</projectFile>
    <projectFile kind="DockerCompose">docker-compose.dcproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="737a1da0-41de-48a5-83d9-2a228385a3cc" name="Changes" comment="initial">
      <change afterPath="$PROJECT_DIR$/.dockerignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.eshop-microservices/.idea/.name" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.eshop-microservices/.idea/aws.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.eshop-microservices/.idea/indexLayout.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.eshop-microservices/.idea/projectSettingsUpdater.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/.idea.eshop-microservices/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/Behaviours/LoggingBehaviour.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/Behaviours/ValidationBehaviour.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/BuildingBlocks.csproj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/CQRS/ICommand.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/CQRS/ICommandHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/CQRS/IQuery.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/CQRS/IQueryHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/Exceptions/BadRequestException.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/Exceptions/Handler/CustomExceptionHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/Exceptions/InternalServerException.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/Exceptions/NotFoundException.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Catalog.API.csproj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Data/CatalogInitialData.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Exceptions/ProductNotFoundException.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Features/Products/CreateProduct/CreateProductEndpoint.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Features/Products/CreateProduct/CreateProductHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Features/Products/DeleteProduct/DeleteProductEndpoint.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Features/Products/DeleteProduct/DeleteProductHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Features/Products/GetProductByCategory/GetProductByCategoryEndpoint.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Features/Products/GetProductByCategory/GetProductByCategoryHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Features/Products/GetProductById/GetProductByIdEndpoint.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Features/Products/GetProductById/GetProductByIdHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Features/Products/GetProducts/GetProductsEndpoint.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Features/Products/GetProducts/GetProductsHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Features/Products/UpdateProduct/UpdateProductEndpoint.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Features/Products/UpdateProduct/UpdateProductHandler.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/GlobalUsing.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Models/Entity.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Models/Product.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Program.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/Properties/launchSettings.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/appsettings.Development.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Services/Catalog/Catalog.API/appsettings.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.dcproj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.override.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/launchSettings.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/eshop-microservices.sln" beforeDir="false" afterPath="$PROJECT_DIR$/eshop-microservices.sln" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DpaMonitoringSettings">
    <option name="firstShow" value="false" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;MacBie2k&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/MacBie2k/EShopMicroservices.git&quot;,
    &quot;accountId&quot;: &quot;fb93c7bb-e705-472f-8e37-3d0d75d03c4d&quot;
  }
}</component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/222a71ccc852b64aae905239f51dffba4717f533e56dfee9f296528e3a6cb4f/RequestDelegateFactory.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/69ba5438e03a0e3a5d2f133f37405f9e32f9e0abb1fbe0a8cb7145514ff85f/MethodBaseInvoker.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/bd1d5c50194fea68ff3559c160230b0ab50f5acf4ce3061bffd6d62958e2182/ExceptionDispatchInfo.cs" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="MetaFilesCheckinStateConfiguration" checkMetaFiles="true" />
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2qqf4PHlm1VJhK0fnWHGxhNn28b" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;.NET Launch Settings Profile.Catalog.API: http.executor&quot;: &quot;Run&quot;,
    &quot;.NET Launch Settings Profile.Catalog.API: https.executor&quot;: &quot;Debug&quot;,
    &quot;Docker.docker-compose.yml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.customizations&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected=".NET Launch Settings Profile.Catalog.API: https">
    <configuration name="Catalog.API: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Services/Catalog/Catalog.API/Catalog.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net9.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Catalog.API: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/Services/Catalog/Catalog.API/Catalog.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net9.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="Catalog.API/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="catalog.api" />
          <option name="containerName" value="catalog.api" />
          <option name="contextFolderPath" value="C:\Projekty\EShopMicroservices\src" />
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="8080" />
                <option name="hostIp" value="127.0.0.1" />
                <option name="hostPort" value="8080" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="sourceFilePath" value="Services/Catalog/Catalog.API/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="secondarySourceFiles">
            <list>
              <option value="C:\Projekty\EShopMicroservices\src\docker-compose.override.yml" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="737a1da0-41de-48a5-83d9-2a228385a3cc" name="Changes" comment="" />
      <created>1735394836499</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1735394836499</updated>
      <workItem from="1735394838939" duration="18241000" />
      <workItem from="1735821762147" duration="19332000" />
      <workItem from="1736519090441" duration="8531000" />
    </task>
    <task id="LOCAL-00001" summary="initial">
      <option name="closed" value="true" />
      <created>1735394956087</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1735394956087</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityCheckinConfiguration" checkUnsavedScenes="true" />
  <component name="UnityProjectConfiguration" hasMinimizedUI="false" />
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
    <MESSAGE value="initial" />
    <option name="LAST_COMMIT_MESSAGE" value="initial" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DotNet Breakpoints">
          <url>file://$PROJECT_DIR$/Services/Catalog/Catalog.API/Features/Products/CreateProduct/CreateProductEndpoint.cs</url>
          <line>17</line>
          <properties documentPath="C:\Projekty\EShopMicroservices\src\Services\Catalog\Catalog.API\Features\Products\CreateProduct\CreateProductEndpoint.cs" containingFunctionPresentation="Lambda expression inside Method 'AddRoutes'">
            <startOffsets>
              <option value="462" />
            </startOffsets>
            <endOffsets>
              <option value="463" />
            </endOffsets>
          </properties>
          <option name="timeStamp" value="9" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DotNet Breakpoints">
          <url>file://$PROJECT_DIR$/Services/Catalog/Catalog.API/Features/Products/GetProductById/GetProductByIdEndpoint.cs</url>
          <line>11</line>
          <properties documentPath="C:\Projekty\EShopMicroservices\src\Services\Catalog\Catalog.API\Features\Products\GetProduct\GetProductEndpoint.cs" containingFunctionPresentation="Lambda expression inside Method 'AddRoutes'">
            <startOffsets>
              <option value="348" />
            </startOffsets>
            <endOffsets>
              <option value="349" />
            </endOffsets>
          </properties>
          <option name="timeStamp" value="10" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DotNet Breakpoints">
          <url>file://$PROJECT_DIR$/Services/Catalog/Catalog.API/Features/Products/DeleteProduct/DeleteProductEndpoint.cs</url>
          <line>9</line>
          <properties documentPath="C:\Projekty\EShopMicroservices\src\Services\Catalog\Catalog.API\Features\Products\DeleteProduct\DeleteProductEndpoint.cs" containingFunctionPresentation="Lambda expression inside Method 'AddRoutes'">
            <startOffsets>
              <option value="309" />
            </startOffsets>
            <endOffsets>
              <option value="310" />
            </endOffsets>
          </properties>
          <option name="timeStamp" value="16" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DotNet Breakpoints">
          <url>file://$PROJECT_DIR$/BuildingBlocks/BuildingBlocks/Exceptions/Handler/CustomExceptionHandler.cs</url>
          <line>13</line>
          <properties documentPath="C:\Projekty\EShopMicroservices\src\BuildingBlocks\BuildingBlocks\Exceptions\Handler\CustomExceptionHandler.cs" containingFunctionPresentation="Method 'TryHandleAsync'">
            <startOffsets>
              <option value="463" />
            </startOffsets>
            <endOffsets>
              <option value="604" />
            </endOffsets>
          </properties>
          <option name="timeStamp" value="17" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>